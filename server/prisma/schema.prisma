// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  DEVELOPER
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String    @db.VarChar(250)
  tickets   Ticket[]
  wallet    Wallet?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Ticket {
  id         Int      @id @default(autoincrement())
  price      Int
  balls      Int[]
  bonusBalls Int[]
  userId     Int
  isWinner   Boolean  @default(false)
  user       User     @relation(fields: [userId], references: [id])
  drawId     Int
  draw       Draw     @relation(fields: [drawId], references: [id])
  createdAt  DateTime @default(now())
}

model Draw {
  id             Int       @id @default(autoincrement())
  drawDate       DateTime  @unique
  wasWon         Boolean   @default(false)
  winningNumbers Int[]
  prize          Int
  tickets        Ticket[]
  ticketsSold    Int       @default(0)
  usersTotal     Int       @default(0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
}

// prize

model Wallet {
  id          Int       @id @default(autoincrement())
  totalCredit Int       @default(0)
  deposit     Deposit[]
  userId      Int       @unique
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  // password
}

model Deposit {
  id        Int      @id @default(autoincrement())
  amount    Int      @default(0)
  status    String
  currency  String
  walletId  Int      @unique
  wallet    Wallet   @relation(fields: [walletId], references: [id])
  createdAt DateTime @default(now())
}

// withdraw
// transaction log
// currency supported
